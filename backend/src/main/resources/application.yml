# Spring Boot는 시작할 때 이 파일을 읽어서 모든 설정을 자동으로 구성한다.

spring:
  application:
    name: moviebuddies

  profiles:
    active: dev

  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
    open-in-view: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true

  # WebSocket 설정
  websocket:
    message-size-limit: 64KB
    send-buffer-size-limit: 512KB
    send-time-limit: 20000

  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    property-naming-strategy: SNAKE_CASE

  # 캐시 설정
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1시간
      cache-null-values: false

# 헬스체크 및 모니터링
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, env
      base-path: /actuator
  endpoint:
    health:
      show-details: always # 헬스체크 상세 정보 표시
      show-components: always # 각 컴포넌트 상태 표시
      probes:
        enabled: true # Kubernetes 스타일 프로브 활성화
  health:
    # 각 컴포넌트별 헬스체크 설정
    db:
      enabled: true # 데이터베이스 헬스체크
    redis:
      enabled: true # Redis 헬스체크
    diskspace:
      enabled: true # 디스크 공간 헬스체크
      threshold: 100MB # 최소 여유 공간
  info:
    env:
      enabled: true # 환경 정보 노출
    java:
      enabled: true # Java 정보 노출
    build:
      enabled: true # 빌드 정보 노출

server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-stacktrace: never
    include-message: always

# JWT 설정
jwt:
  secret: ${JWT_SECRET:mySecretKey1234567890123456789012345678901234567890}
  access-token-expiration: 3600000 # 1시간 (밀리초)
  refresh-token-expiration: 604800000 # 7일 (밀리초)
  issuer: moviebuddies

# 파일 업로드 경로
file:
  upload:
    path: ${FILE_UPLOAD_PATH:./uploads}
    profile-images: ${file.upload.path}/profile-images
    chat-images: ${file.upload.path}/chat-images
  max-size: 10MB
  allowed-extensions: jpg,jpeg,png,gif,webp

# CORS 설정
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
  allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

# API 문서화 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

tmdb:
  api-key: ${TMDB_API_KEY:your-tmdb-api-key}
  base-url: https://api.themoviedb.org/3
  image-url: https://image.tmdb.org/t/p/w500

# 로깅 설정
logging:
  level:
    com.moviebuddies: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ./logs/application.log
    max-size: 100MB
    max-history: 30
