# 개발 환경 설정 (application-dev.yml)
spring:
  # 개발 환경 데이터베이스
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:moviebuddies}
    username: ${DB_USER:moviebuddies}
    password: ${DB_PASSWORD:password}

  # 개발 환경 JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop # 개발 환경에서는 자동 재생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  # 개발 환경 Redis
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0

  # 개발 환경 DevTools
  devtools:
    restart:
      enabled: true
      exclude: static/**,public/**
    livereload:
      enabled: true
      port: 35729

# 개발 환경 서버 설정
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1 # 일관성 유지

# 개발 환경 로깅
logging:
  level:
    com.moviebuddies: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.cache: DEBUG
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

# 개발 환경 CORS (프론트엔드 개발 서버)
cors:
  allowed-origins: http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000

# 개발 환경 JWT
jwt:
  secret: ${JWT_SECRET:mySecretKeyForJWTTokenGenerationThatShouldBeLongEnoughAndSecure}
  expiration: 86400000 # 24시간
  refresh-expiration: 604800000 # 7일

# 개발 환경 파일 업로드
file:
  upload-dir: ${user.home}/moviebuddies/uploads/dev
  profile-dir: ${file.upload-dir}/profile-images
  chat-dir: ${file.upload-dir}/chat-images

# 개발 환경 액추에이터 (모든 엔드포인트 노출)
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
